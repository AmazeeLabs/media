<?php
// $Id$

/**
 * @file
 * This module provides integration for Drupal's file module
 * with the Media module
 */


/**
 * Implementation of hook_media_register
 *
 * @return array
 *   Form array items
*/
function media_file_media_register() {
  $items = array();

  // Register User files display
  $items['media_file_user_files'] = array(
    'tab' => 'My files',
    'subtab' => 'Files I have uploaded',
    'name'        => t('User files'),
    'uri'         => 'file',
    'kind'        => 'resource',
    'types'       => '*',
    'description'  => t("Displays all of current user's files."),
    'callbacks'   => array(
      'resource'    => 'media_file_user_files_select',
    ),
    'fields'      => array('file'),
  );

  // Register Add/File file functionality
  $items['media_file_resource_add_file'] = array(
    'tab' => 'Upload a file',
    'subtab' => 'Upload a file',
    'name'        => 'Media File add file',
    'description' => t("Add new file using Drupal's File module"),
    'kind'        => 'resource',
    'callbacks'   => array(
      'resource'    => 'media_file_resource_add_file',
    ),
    'fields'      => array('file'),
  );

  // Register Embed file functionality
  $items['media_file_resource_embed_file'] = array(
    'name'        => 'Media File embed file',
    'description' => t("Embed file URI using Drupal's File module"),
    'uri'         => 'file',
    'kind'        => 'resource',
    'types'       => '*',
    'callbacks'   => array(
      'resource'    => 'media_file_resource_embed_file',
     ),
    'fields'      => array('file'),
  );

  // Register form formatter functionality
  $items['media_file_formatter_form'] = array(
    'name'        => 'Media File form formatter',
    'description' => "Media file form formatter",
    'kind'        => 'formatter',
    'callbacks'   => array(
      'formatter'        => 'media_file_formatter_form',
    ),
    'fields'      => array('file'),
    );

  // Register action functionality
  // @TODO: This may not be needed depending on our implementation of hook_media_action [see #480166]
  $items['media_file_action'] = array(
    'name'        => 'Media File action handler',
    'description' => t("Called to perform various actions such as attaching a file to a node"),
    'kind'        => 'action',
    'types'       => '*',
    'callbacks'   => array(
      'action'      => 'media_file_action',
     ),
    'fields'      => array('file'),
  );

  return $items;
}

/**
 * Implementation of callback media_file_media_user_files_select().
 *
 * @TODO: We'll need to investigate performance mechanisms (lazy loading etc.)
 * rather than dumping ALL files in a single go.
 *
 * @param string $node_type
 * @param string $field
 * @param int $uid
 */
function media_file_user_files_select($node_type, $field, $uid) {
  $files = array();

  // Select all files owned by this user.
  $results = db_query('SELECT uri, filename FROM {file} WHERE uid = :uid', array(':uid' => $uid));

  foreach ($results as $file) {
    $files[] = array(
      'uri'      => $file->uri,
      'filename' => $file->filename,
      'meta'     => '',
    );
  }

  $return = array(
    t('My files') => array(
      t('Local')    => media_resource_display_user_files_form($files, t('Your files')),
    )
  );

  return $return;
}

/**
 * Format Media File form
 *
 * @param string $node_type
 * @param string $field
 * @param string $file_extension
 * @param string $uri
 * @return array
 *   Return a form array.
*/
function media_file_formatter_form($node_type, $field, $file_extension, $uri) {
  if ($uri) {
    $form['display'] = array(
      '#type'  => 'item',
      '#value' => l($uri, $uri),
    );
    $form['list'] = array(
      '#type'          => 'checkbox',
      '#title'         => 'List file',
      '#default_value' => TRUE,
    );
  }

  return $form;
}

/**
 * Implementation of registration media_file_resource_add_file
 *
 * @param string $node_type
 *   drupal node type
 * @param string $field
 *   field name that is being overridden
 * @param int $uid
 *   user id
 */
function media_file_resource_add_file($node_type, $field, $uid) {
  return array(
    t('Add files') => array(
      t('New file')  => media_resource_display_upload_form(),
    )
  );
}

/**
 * Implementation of registration media_file_resource_embed_file
 *
 * @param string $node_type
 * @param string $field
 * @param int $uid
 */
function media_file_resource_embed_file($node_type, $field, $uid) {
  return array(
    t('Add files') => array(
      t('Embeded file') => _media_file_display_embed_form(),
    )
  );
}

/**
 * Display the file form for the tab
 *
 * @return array
 *   Form array containing a textarea
 */
function _media_file_display_embed_form() {
  $form['media_file']['file'] = array(
    '#type'  => 'textarea',
    '#title' => t('File your file'),
   );

   return $form;
}

/**
 * Implementation of hook_media_action
 *
 * @TODO: Implement and document
 */
function media_file_media_action(&$form, $form_state, $op = '') {
  dsm("In the Media File action handler. Implement switch and carry out tasks.");
  dsm($op);
  dsm($form_state);
  dsm($form);
}
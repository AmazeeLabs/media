<?php
// @Id;
/**
 * @file
 * Tests for media
 */

/**
 * Test media type creation and managedment
 */
class MediaTypeTest extends DrupalWebTestCase {

  public static function getInfo() {
    return array(
      'name' => 'Media types',
      'description' => 'Tests media types',
      'group' => 'Media',
    );
  }

  function setUp() {
    parent::setUp();
    // Nice, TDD FTW.  #totalsarcasm
    variable_set('simpletest_verbose', TRUE);
  }

  private function createType($overrides) {
    $type = new StdClass();
    $type->machine_name = 'test';
    $type->label = "Test";
    $type->base = TRUE;
    $type->view_mode_defaults = array(
      'media_preview' => 'styles_file_square_thumbnail',
      'media_original' => 'file_default',
    );

    $type->type_callback_args =
    array(
      'match_type' => 'all',
      'mimetypes' => array('/^test/'),
      'extensions' => array('jpg', 'jpeg', 'gif', 'png', 'tiff'),
      'streams' => array('public', 'private'),
    );

    foreach ($overrides as $k => $v) {
      $type->$k = $v;
    }
    media_type_save($type);
    return $type;
  }

  /**
   * Test creating a new type.  Basic CRUD
   */
  function testCreate() {
    $type_machine_name = 'foo';
    $type = $this->createType(array('machine_name' => $type_machine_name, 'label' => 'foobar'));
    $loaded_type = media_type_load($type_machine_name);
    $this->assertEqual($loaded_type->label, 'foobar');
  }

  /**
   * Test view mode assignment.  Currently fails, don't know why
   * @return unknown_type
   */
  function testViewModesAssigned() {
    $view_modes = array(
      'media_preview' => 'styles_file_square_thumbnail',
      'media_original' => 'file_default',
    );
    $type_machine_name = 'foo';
    $type = $this->createType(array('machine_name' => $type_machine_name, 'view_mode_defaults' => $view_modes));
    $instance = field_info_instance('media', 'file', $type_machine_name);
    foreach ($view_modes as $view_mode => $formatter) {
      $this->assertEqual($instance['display'][$view_mode]['type'], $formatter, 'When viewed as ' . $media_preview . ' Should be shown as ' . $formatter .' actually set to ' . $instance['display'][$view_mode]['type']);
    }
  }

}
